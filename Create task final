
#setting up tk
import time
from tkinter import *
import threading
from random import *
window = Tk()


global Birdscore
Birdscore = 0
#sets up canvas
playground= Canvas(window, width=1200, height= 630, bg="black")
playground.pack()


#birdwinline
finishPic = PhotoImage(file = "finish.png")
finish= finishPic
finishline = playground.create_image(10,200, image= finishPic)

#background
computerImg = PhotoImage(file ="Computer background.gif")
Com = computerImg
computerBg = playground.create_image(0,0, anchor = NW, image = computerImg)

#bird that dodges objects
birdPic = PhotoImage(file = "bird.png")
bird = birdPic
db = playground.create_image(700,300, image= birdPic)

#first object (a cow)
cowPic = PhotoImage(file = "cow.png")
cow= cowPic
dcow = playground.create_image(300,400, image= cowPic)

#birdwinline
finishPic = PhotoImage(file = "finish.png")
finish= finishPic
finishline = playground.create_image(10,200, image= finishPic)

global Score
Score= 0

def birdbound():
    global Score
    try:
        dbBbox = playground.bbox(db)
        #defining the coordinates of the bird
        dbx1 = dbBbox[0]
        dby1 = dbBbox[1]
        dbx2 = dbBbox[2]
        dby2 = dbBbox[3]

        #setting limits for the cow picture
        cowpicBbox = playground.bbox(dcow)
        dcowx1 = cowpicBbox[0]
        dcowy1 = cowpicBbox[1]
        dcowx2 = cowpicBbox[2]
        dcowy2 = cowpicBbox[3]

        if dcowy1 <= dby1 <= dcowy2 and dcowx1 <= dbx1 <= dcowx2:
            playground.move(db, 50, -50)
            Score+=1
            cowpointslabel.config("Cow:" + str(Score) + " points")


        #left side
        elif dbx1 <10 :
            playground.move(db, 10, 0)
        #right side
        elif dbx2 > 1180:
            playground.move(db, -10, 0)
        #top
        elif dby1 < 10:
            playground.move(db, 0, 10)
        #bottom
        elif dby2 > 630:
            playground.move(db, 0, -10)
    except:
         #left side
        if dbx1 < 10:
            playground.move(db, 10, 0)
        #right side
        elif dbx2 > 1180:
            playground.move(db, -10, 0)
        #top
        elif dby1 < 10:
            playground.move(db, 0, 10)
        #bottom
        elif dby2 > 630:
            playground.move(db, 0, -10)

cowpointslabel = Label(window, text= "Cow:", bg= "green", fg = "blue", height = "5", width = "40")
cowpointslabel.place(x=100, y=10)




#movement of the bird
def moveright(event):
    global moveright
    for i in range(3):
        playground.move(db, 5, 0)
        birdbound()
def moveleft(event):
    global moveleft
    for i in range(3):
        playground.move(db, -5, 0)
        dbBbox = playground.bbox(db)
        #defining the coordinates of the bird
        dbx1 = dbBbox[0]
        if dbx1 < (50):
                global Birdscore
                playground.move(db, 1000, 0)
                Birdscore+=1
                birdpointslabel.config(text="Bird:" + str(Birdscore) + " points")
        else:
            birdbound()
def moveup(event):
    global moveup
    for i in range(3):
        playground.move(db, 0, -5)
        birdbound()
def movedown(event):
    global movedown
    for i in range(3):
        playground.move(db, 0, 5)
        birdbound()

#binds keys to movements
playground.bind_all("<Right>", moveright)
playground.bind_all("<Left>", moveleft)
playground.bind_all("<Up>", moveup)
playground.bind_all("<Down>", movedown)

def cowoff():
    ry  = randint(30, 620)
    cowboundary= playground.bbox(dcow)
    if cowboundary[2] > 1400:
        playground.coords(dcow, -50, ry)


def moveCow():
    birdbound()
    cowoff()
    playground.move(dcow, 4, 0)
    if playground.bbox(dcow)[0] >= window.winfo_width():
        playground.delete(dcow)
    else:
        window.after(50, moveCow)




birdpointslabel = Label(window, text="Bird:", bg = "pink", fg = "red", height = "5", width = "40")
birdpointslabel.place(x=700, y=10)





#making the threads
def threads(*args):
    thread1 = threading.Thread(target= moveCow)
    thread1.start()

infoLabel = Label(window, text= "Push space 1x for easy, 2x for medium, and 3x for hard. Hit the finish line to gain points")
infoLabel.pack()

#starting thread
playground.bind_all("<space>", threads)
window.mainloop()







